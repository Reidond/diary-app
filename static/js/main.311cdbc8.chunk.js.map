{"version":3,"sources":["views/LeftView.js","components/AddItem.js","utils/generateID.js","components/Item.js","components/Items.js","actions/actionTypes.js","components/Comment.js","components/NoComments.js","components/AddComment.js","utils/randomHexColor.js","components/NoCurrentItem.js","components/Comments.js","views/RightView.js","App.js","serviceWorker.js","reducers/itemsReducer.js","helpers/pushToLocalStorage.js","helpers/filterFromLocalStorage.js","reducers/currentItemReducer.js","reducers/commentsReducer.js","reducers/index.js","index.js"],"names":["LeftView","className","AddItem","addItem","useState","value","setValue","onSubmit","e","preventDefault","item","id","Math","random","toString","substr","title","comments","isActive","type","placeholder","onChange","target","connect","state","entries","removeItem","selectItem","currentItem","removeCurrentItem","removeAllComments","handleItemClick","localItem","localComments","setLocalComments","isActiveClass","setIsActiveClass","useEffect","onClick","bind","onKeyDown","role","tabIndex","length","items","selectedEntry","dispatch","getItems","payload","loadItem","getComments","map","key","Comment","comment","style","background","avatar","text","NoComments","AddComment","addComment","currentItemId","rows","event","keyCode","ctrlKey","NoCurrentItem","isItemNullOrEmpty","Object","keys","currentItemComments","setCurrentItemComments","i","RightView","App","Boolean","window","location","hostname","match","handlers","entry","localItems","JSON","parse","localStorage","getItem","push","setItem","stringify","pushToLocalStorage","filter","filterFromLocalStorage","initialState","normalComments","combineReducers","action","DEFAULT","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.311cdbc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/LeftView.scss';\r\n\r\nconst LeftView = () => (\r\n  <div className=\"text-left p-4\">\r\n    <h1 className=\"left-view--h1\">DIARY APP</h1>\r\n    <p className=\"left-view--p\">Comment with no sense</p>\r\n  </div>\r\n);\r\n\r\nexport default LeftView;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generateID } from '../utils/generateID';\r\n\r\nconst AddItem = ({ addItem }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const item = {\r\n      id: generateID(),\r\n      title: value,\r\n      comments: [],\r\n      isActive: false\r\n    };\r\n\r\n    addItem(item);\r\n\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-row\">\r\n        <div className=\"col-9 d-flex flex-grow-1 pl-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Type name here...\"\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <button type=\"submit\" className=\"btn btn-primary w-100 text-white\">\r\n            Add new\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddItem.propTypes = {\r\n  addItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddItem;\r\n","export function generateID() {\r\n  return `${Math.random()\r\n    .toString(36)\r\n    .substr(2, 9)}`;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Item = ({\r\n  item,\r\n  removeItem,\r\n  selectItem,\r\n  currentItem,\r\n  removeCurrentItem,\r\n  comments,\r\n  removeAllComments\r\n}) => {\r\n  const handleButtonClick = id => {\r\n    if (id === currentItem.id) {\r\n      removeCurrentItem();\r\n    }\r\n\r\n    removeAllComments(id);\r\n    removeItem(id);\r\n  };\r\n\r\n  const handleItemClick = localItem => selectItem(localItem);\r\n\r\n  const [localComments, setLocalComments] = useState([]);\r\n\r\n  const [isActiveClass, setIsActiveClass] = useState('col-12');\r\n\r\n  useEffect(() => {\r\n    if (item?.id === currentItem?.id) {\r\n      setIsActiveClass('col-12 right-view--active');\r\n    } else {\r\n      setIsActiveClass('col-12');\r\n    }\r\n  }, [currentItem, item]);\r\n\r\n  useEffect(() => {\r\n    setLocalComments(comments[item.id]);\r\n  }, [comments, item.id]);\r\n\r\n  return (\r\n    <div className={isActiveClass}>\r\n      <div className=\"right-view--item\">\r\n        <div className=\"row d-flex align-items-center\">\r\n          <div\r\n            className=\"col-10\"\r\n            onClick={handleItemClick.bind(null, item)}\r\n            onKeyDown={handleItemClick.bind(null, item)}\r\n            role=\"button\"\r\n            tabIndex=\"-1\"\r\n          >\r\n            <div className=\"p-3 font-weight-bold\">\r\n              {item.title}{' '}\r\n              <span className=\"badge badge-pill badge-primary\">\r\n                {localComments?.length}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger\"\r\n              onClick={handleButtonClick.bind(null, item.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  item: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  removeItem: PropTypes.func.isRequired,\r\n  selectItem: PropTypes.func.isRequired,\r\n  removeCurrentItem: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  comments: state.comments.entries\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Item);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  ADD_ITEMS_TO_STORE,\r\n  ADD_ITEM,\r\n  REMOVE_ITEM,\r\n  SELECT_ITEM,\r\n  LOAD_ITEM,\r\n  REMOVE_CURRENT_ITEM,\r\n  ADD_COMMENTS_TO_STORE,\r\n  REMOVE_ALL_COMMENTS\r\n} from '../actions/actionTypes';\r\nimport AddItem from './AddItem';\r\nimport Item from './Item';\r\n\r\nconst Items = ({\r\n  getItems,\r\n  addItem,\r\n  removeItem,\r\n  items,\r\n  currentItem,\r\n  selectItem,\r\n  loadItem,\r\n  removeCurrentItem,\r\n  removeAllComments,\r\n  getComments\r\n}) => {\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [getItems]);\r\n\r\n  useEffect(() => {\r\n    loadItem();\r\n  }, [loadItem]);\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n  }, [getComments]);\r\n\r\n  return (\r\n    <div className=\"card shadow-sm bg-white rounded\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title right-view--title pb-3\">Items</h2>\r\n        <AddItem addItem={addItem} />\r\n        <div className=\"row pt-3\">\r\n          {items.map(item => (\r\n            <Item\r\n              currentItem={currentItem}\r\n              item={item}\r\n              removeItem={removeItem}\r\n              removeCurrentItem={removeCurrentItem}\r\n              removeAllComments={removeAllComments}\r\n              selectItem={selectItem}\r\n              key={item.id}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: state.items.entries,\r\n  currentItem: state.currentItem.selectedEntry\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getItems: () => dispatch({ type: ADD_ITEMS_TO_STORE }),\r\n    addItem: item => dispatch({ type: ADD_ITEM, payload: item }),\r\n    removeItem: id => dispatch({ type: REMOVE_ITEM, payload: id }),\r\n    selectItem: item => dispatch({ type: SELECT_ITEM, payload: item }),\r\n    loadItem: () => dispatch({ type: LOAD_ITEM }),\r\n    removeCurrentItem: () => dispatch({ type: REMOVE_CURRENT_ITEM }),\r\n    getComments: () => dispatch({ type: ADD_COMMENTS_TO_STORE }),\r\n    removeAllComments: id =>\r\n      dispatch({ type: REMOVE_ALL_COMMENTS, payload: id })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Items);\r\n","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\nexport const MAKE_ITEM_ACTIVE = 'MAKE_ITEM_ACTIVE';\r\nexport const LOAD_ITEM = 'LOAD_ITEM';\r\nexport const REMOVE_CURRENT_ITEM = 'REMOVE_CURRENT_ITEM';\r\nexport const ADD_ITEMS_TO_STORE = 'ADD_ITEMS_TO_STORE';\r\nexport const ADD_COMMENTS_TO_STORE = 'ADD_COMMENTS_TO_STORE';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_ALL_COMMENTS = 'REMOVE_ALL_COMMENTS';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Comment = ({ comment }) => {\r\n  return (\r\n    <div className=\"w-100 comment--item\">\r\n      <div className=\"form-row\">\r\n        <div className=\"col-2 pl-4\">\r\n          <div\r\n            className=\"comment--avatar\"\r\n            style={{ background: comment.avatar }}\r\n          />\r\n        </div>\r\n        <div className=\"col-10 pl-2 pr-4\">\r\n          <div>{comment.text}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.objectOf(PropTypes.any).isRequired\r\n};\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\n\r\nconst NoComments = () => {\r\n  return <div className=\"col-12\">Add some comments...</div>;\r\n};\r\n\r\nexport default NoComments;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { randomHexColor } from '../utils/randomHexColor';\r\n\r\nconst AddComment = ({ addComment, currentItemId }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleKeyDown = event => {\r\n    const comment = {\r\n      id: currentItemId,\r\n      avatar: randomHexColor(),\r\n      text: value\r\n    };\r\n\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=79407\r\n    if ((event.keyCode === 10 || event.keyCode === 13) && event.ctrlKey) {\r\n      addComment(comment);\r\n      setValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"w-100\">\r\n      <div className=\"form-row\">\r\n        <div className=\"col-2 pl-4\">\r\n          <div className=\"comment--avatar comment--avatar-main\" />\r\n        </div>\r\n        <div className=\"col-10 pl-2 pr-4\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddComment.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n  currentItemId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AddComment;\r\n","export function randomHexColor() {\r\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\"<<\"] }] */\r\n  return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\r\n}\r\n","import React from 'react';\r\n\r\nconst NoCurrentItem = () => {\r\n  return <div className=\"col-12\">Choose item to see and add comments...</div>;\r\n};\r\n\r\nexport default NoCurrentItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Comment from './Comment';\r\nimport NoComments from './NoComments';\r\nimport AddComment from './AddComment';\r\nimport NoCurrentItem from './NoCurrentItem';\r\nimport { ADD_COMMENT } from '../actions/actionTypes';\r\n\r\nconst Comments = ({ currentItem, addComment, comments }) => {\r\n  const isItemNullOrEmpty =\r\n    !currentItem || Object.keys(currentItem).length === 0;\r\n\r\n  const [currentItemComments, setCurrentItemComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCurrentItemComments(comments[(currentItem?.id)]);\r\n  }, [comments, currentItem, currentItemComments]);\r\n\r\n  return (\r\n    <div className=\"card shadow-sm bg-white rounded\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title right-view--title\">\r\n          Comments {isItemNullOrEmpty ? null : `#${currentItem.id}`}\r\n        </h2>\r\n        {isItemNullOrEmpty ? (\r\n          <NoCurrentItem />\r\n        ) : (\r\n          <div className=\"card-text\">\r\n            <div className=\"row pt-2\">\r\n              {!currentItemComments?.length ? (\r\n                <NoComments />\r\n              ) : (\r\n                currentItemComments.map((comment, i) => (\r\n                  // eslint-disable-next-line react/no-array-index-key\r\n                  <div key={comment.id + i} className=\"pt-5 col-12 p-0\">\r\n                    <Comment comment={comment} />\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n            {currentItem && Object.keys(currentItem).length > 0 ? (\r\n              <div className=\"row pt-5\">\r\n                <AddComment\r\n                  addComment={addComment}\r\n                  currentItemId={currentItem.id}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentItem: state.currentItem.selectedEntry,\r\n  comments: state.comments.entries\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addComment: comment => dispatch({ type: ADD_COMMENT, payload: comment })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Comments);\r\n","import React from 'react';\r\nimport '../scss/RightView.scss';\r\nimport Items from '../components/Items';\r\nimport Comments from '../components/Comments';\r\n\r\nconst RightView = () => (\r\n  <div className=\"container-fluid p-4\">\r\n    <div className=\"row\">\r\n      <div className=\"col-6\">\r\n        <Items />\r\n      </div>\r\n      <div className=\"col-6\">\r\n        <Comments />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default RightView;\r\n","import React from 'react';\r\nimport LeftView from './views/LeftView';\r\nimport RightView from './views/RightView';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid h-100\">\r\n      <div className=\"row h-100 fixed-top\">\r\n        <div className=\"col-3 hidden-md-down left-view\">\r\n          <LeftView />\r\n        </div>\r\n        <div className=\"col-9 col-sm-9 col-md-9 col-lg-9 col-xl-9\">\r\n          <RightView />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ADD_ITEMS_TO_STORE,\r\n  ADD_ITEM,\r\n  REMOVE_ITEM\r\n} from '../actions/actionTypes';\r\nimport { pushToLocalStorage } from '../helpers/pushToLocalStorage';\r\nimport { filterFromLocalStorage } from '../helpers/filterFromLocalStorage';\r\n\r\nconst LOCAL_STORAGE_NAME = 'items';\r\n\r\nconst handlers = {\r\n  [ADD_ITEM]: (state, payload) => {\r\n    const localItems = pushToLocalStorage(LOCAL_STORAGE_NAME, payload);\r\n    return { ...state, entries: localItems };\r\n  },\r\n  [REMOVE_ITEM]: (state, payload) => {\r\n    const localItems = filterFromLocalStorage(LOCAL_STORAGE_NAME, payload);\r\n    return { ...state, entries: localItems };\r\n  },\r\n  [ADD_ITEMS_TO_STORE]: state => {\r\n    const items = localStorage.getItem(LOCAL_STORAGE_NAME);\r\n    return { ...state, entries: (items && JSON.parse(items)) || [] };\r\n  },\r\n  DEFAULT: state => state\r\n};\r\n\r\nconst initialState = {\r\n  entries: []\r\n};\r\n\r\nexport default function itemsReducer(state = initialState, action) {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action.payload);\r\n}\r\n","export function pushToLocalStorage(entry, item) {\r\n  const localItems = JSON.parse(localStorage.getItem(entry)) || [];\r\n  localItems.push(item);\r\n  localStorage.setItem(entry, JSON.stringify(localItems));\r\n  return localItems;\r\n}\r\n","export function filterFromLocalStorage(entry, id) {\r\n  let localItems = JSON.parse(localStorage.getItem(entry)) || [];\r\n  localItems = localItems.filter(item => item.id !== id);\r\n  localStorage.setItem(entry, JSON.stringify(localItems));\r\n  return localItems;\r\n}\r\n","import {\r\n  SELECT_ITEM,\r\n  LOAD_ITEM,\r\n  REMOVE_CURRENT_ITEM\r\n} from '../actions/actionTypes';\r\n\r\nconst LOCAL_STORAGE_NAME = 'current-item';\r\n\r\nconst handlers = {\r\n  [SELECT_ITEM]: (state, payload) => {\r\n    localStorage.setItem(LOCAL_STORAGE_NAME, JSON.stringify(payload));\r\n    return { ...state, selectedEntry: payload };\r\n  },\r\n  [LOAD_ITEM]: state => {\r\n    const item = localStorage.getItem(LOCAL_STORAGE_NAME);\r\n    return { ...state, selectedEntry: (item && JSON.parse(item)) || {} };\r\n  },\r\n  [REMOVE_CURRENT_ITEM]: state => {\r\n    localStorage.setItem(LOCAL_STORAGE_NAME, null);\r\n    return { ...state, selectedEntry: null };\r\n  },\r\n  DEFAULT: state => state\r\n};\r\n\r\nconst initialState = {\r\n  selectedEntry: {}\r\n};\r\n\r\nexport default function currentItemReducer(state = initialState, action) {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action.payload);\r\n}\r\n","import {\r\n  ADD_COMMENT,\r\n  ADD_COMMENTS_TO_STORE,\r\n  REMOVE_ALL_COMMENTS\r\n} from '../actions/actionTypes';\r\n\r\nconst LOCAL_STORAGE_NAME = 'comments';\r\n\r\nconst handlers = {\r\n  [ADD_COMMENTS_TO_STORE]: state => {\r\n    const items = localStorage.getItem(LOCAL_STORAGE_NAME);\r\n    return { ...state, entries: (items && JSON.parse(items)) || {} };\r\n  },\r\n  [ADD_COMMENT]: (state, payload) => {\r\n    const comments = localStorage.getItem(LOCAL_STORAGE_NAME);\r\n    const normalComments = (comments && JSON.parse(comments)) || {};\r\n\r\n    if (typeof normalComments[payload.id] === 'undefined') {\r\n      normalComments[payload.id] = [payload];\r\n    } else {\r\n      normalComments[payload.id].push(payload);\r\n    }\r\n\r\n    localStorage.setItem(LOCAL_STORAGE_NAME, JSON.stringify(normalComments));\r\n    return { ...state, entries: normalComments };\r\n  },\r\n  [REMOVE_ALL_COMMENTS]: (state, payload) => {\r\n    const comments = localStorage.getItem(LOCAL_STORAGE_NAME);\r\n    const normalComments = (comments && JSON.parse(comments)) || {};\r\n    delete normalComments[payload];\r\n    localStorage.setItem(LOCAL_STORAGE_NAME, JSON.stringify(normalComments));\r\n    return { ...state, entries: normalComments };\r\n  },\r\n  DEFAULT: state => state\r\n};\r\n\r\nconst initialState = {\r\n  entries: {}\r\n};\r\n\r\nexport default function commentsReducer(state = initialState, action) {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action.payload);\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport itemsReducer from './itemsReducer';\r\nimport currentItemReducer from './currentItemReducer';\r\nimport commentsReducer from './commentsReducer';\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  currentItem: currentItemReducer,\r\n  comments: commentsReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './scss/custom.scss';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, compose } from 'redux';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}