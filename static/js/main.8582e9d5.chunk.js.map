{"version":3,"sources":["views/LeftView.js","utils/generateID.js","components/AddItem.js","components/Item.js","components/Items.js","actions/actionTypes.js","components/Comment.js","components/NoComments.js","components/AddComment.js","utils/randomHexColor.js","components/NoCurrentItem.js","components/Comments.js","views/RightView.js","App.js","serviceWorker.js","reducers/itemsReducer.js","helpers/pushToLocalStorage.js","helpers/filterFromLocalStorage.js","reducers/currentItemReducer.js","reducers/index.js","index.js"],"names":["LeftView","className","generateID","Math","random","toString","substr","AddItem","addItem","useState","value","setValue","onSubmit","e","preventDefault","item","id","title","comments","isActive","type","placeholder","onChange","target","Item","removeItem","selectItem","currentItem","removeCurrentItem","handleItemClick","localItem","isActiveClass","setIsActiveClass","useEffect","onClick","bind","onKeyDown","role","tabIndex","connect","state","items","entries","selectedEntry","dispatch","getItems","payload","loadItem","map","key","Comment","comment","style","background","avatar","text","NoComments","AddComment","addComment","rows","event","keyCode","ctrlKey","NoCurrentItem","isItemNullOrEmpty","Object","keys","length","RightView","App","Boolean","window","location","hostname","match","handlers","entry","localItems","JSON","parse","localStorage","getItem","push","setItem","stringify","pushToLocalStorage","filter","filterFromLocalStorage","initialState","normalItem","combineReducers","action","DEFAULT","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8582e9d5.chunk.js","sourcesContent":["import React from 'react';\nimport '../scss/LeftView.scss';\n\nconst LeftView = () => (\n  <div className=\"text-left p-4\">\n    <h1 className=\"left-view--h1\">DIARY APP</h1>\n    <p className=\"left-view--p\">Comment with no sense</p>\n  </div>\n);\n\nexport default LeftView;\n","export function generateID() {\n  return `${Math.random()\n    .toString(36)\n    .substr(2, 9)}`;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { generateID } from '../utils/generateID';\n\nconst AddItem = ({ addItem }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const item = {\n      id: generateID(),\n      title: value,\n      comments: [],\n      isActive: false\n    };\n\n    addItem(item);\n\n    setValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-row\">\n        <div className=\"col-9 d-flex flex-grow-1 pl-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Type name here...\"\n            value={value}\n            onChange={e => setValue(e.target.value)}\n          />\n        </div>\n        <div className=\"col-3\">\n          <button type=\"submit\" className=\"btn btn-primary w-100 text-white\">\n            Add new\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nAddItem.propTypes = {\n  addItem: PropTypes.func.isRequired\n};\n\nexport default AddItem;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Item = ({\n  item,\n  removeItem,\n  selectItem,\n  currentItem,\n  removeCurrentItem\n}) => {\n  const handleButtonClick = id => {\n    if (id === currentItem.id) {\n      removeCurrentItem();\n    }\n\n    removeItem(id);\n  };\n\n  const handleItemClick = localItem => selectItem(localItem);\n\n  const [isActiveClass, setIsActiveClass] = useState('col-12');\n\n  useEffect(() => {\n    if (item?.id === currentItem?.id) {\n      setIsActiveClass('col-12 right-view--active');\n    } else {\n      setIsActiveClass('col-12');\n    }\n  }, [currentItem, item]);\n\n  return (\n    <div className={isActiveClass}>\n      <div className=\"right-view--item\">\n        <div className=\"row d-flex align-items-center\">\n          <div\n            className=\"col-10\"\n            onClick={handleItemClick.bind(null, item)}\n            onKeyDown={handleItemClick.bind(null, item)}\n            role=\"button\"\n            tabIndex=\"-1\"\n          >\n            <div className=\"p-3 font-weight-bold\">{item.title}</div>\n          </div>\n          <div className=\"col-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              onClick={handleButtonClick.bind(null, item.id)}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nItem.propTypes = {\n  item: PropTypes.objectOf(PropTypes.any).isRequired,\n  removeItem: PropTypes.func.isRequired,\n  selectItem: PropTypes.func.isRequired,\n  removeCurrentItem: PropTypes.func.isRequired\n};\n\nexport default Item;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  ADD_ITEMS_TO_STORE,\n  ADD_ITEM,\n  REMOVE_ITEM,\n  SELECT_ITEM,\n  LOAD_ITEM,\n  REMOVE_CURRENT_ITEM\n} from '../actions/actionTypes';\nimport AddItem from './AddItem';\nimport Item from './Item';\n\nconst Items = ({\n  getItems,\n  addItem,\n  removeItem,\n  items,\n  currentItem,\n  selectItem,\n  loadItem,\n  removeCurrentItem\n}) => {\n  useEffect(() => {\n    getItems();\n  }, [getItems]);\n\n  useEffect(() => {\n    loadItem();\n  }, [loadItem]);\n\n  return (\n    <div className=\"card shadow-sm bg-white rounded\">\n      <div className=\"card-body\">\n        <h2 className=\"card-title right-view--title pb-3\">Items</h2>\n        <AddItem addItem={addItem} />\n        <div className=\"row pt-3\">\n          {items.map(item => (\n            <Item\n              currentItem={currentItem}\n              item={item}\n              removeItem={removeItem}\n              removeCurrentItem={removeCurrentItem}\n              selectItem={selectItem}\n              key={item.id}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  items: state.items.entries,\n  currentItem: state.currentItem.selectedEntry\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItems: () => dispatch({ type: ADD_ITEMS_TO_STORE }),\n    addItem: item => dispatch({ type: ADD_ITEM, payload: item }),\n    removeItem: id => dispatch({ type: REMOVE_ITEM, payload: id }),\n    selectItem: item => dispatch({ type: SELECT_ITEM, payload: item }),\n    loadItem: () => dispatch({ type: LOAD_ITEM }),\n    removeCurrentItem: () => dispatch({ type: REMOVE_CURRENT_ITEM })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Items);\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const SELECT_ITEM = 'SELECT_ITEM';\nexport const MAKE_ITEM_ACTIVE = 'MAKE_ITEM_ACTIVE';\nexport const LOAD_ITEM = 'LOAD_ITEM';\nexport const REMOVE_CURRENT_ITEM = 'REMOVE_CURRENT_ITEM';\nexport const ADD_ITEMS_TO_STORE = 'ADD_ITEMS_TO_STORE';\nexport const ADD_COMMENT = 'ADD_COMMENT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => {\n  return (\n    <div className=\"w-100 comment--item\">\n      <div className=\"form-row\">\n        <div className=\"col-2 pl-4\">\n          <div\n            className=\"comment--avatar\"\n            style={{ background: comment.avatar }}\n          />\n        </div>\n        <div className=\"col-10 pl-2 pr-4\">\n          <div>{comment.text}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nComment.propTypes = {\n  comment: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nexport default Comment;\n","import React from 'react';\n\nconst NoComments = () => {\n  return <div className=\"col-12\">Add some comments...</div>;\n};\n\nexport default NoComments;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { randomHexColor } from '../utils/randomHexColor';\nimport { generateID } from '../utils/generateID';\n\nconst AddComment = ({ addComment }) => {\n  const [value, setValue] = useState('');\n\n  const handleKeyDown = event => {\n    const comment = {\n      id: generateID(),\n      avatar: randomHexColor(),\n      text: value\n    };\n\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=79407\n    if ((event.keyCode === 10 || event.keyCode === 13) && event.ctrlKey) {\n      addComment(comment);\n      setValue('');\n    }\n  };\n\n  return (\n    <form className=\"w-100\">\n      <div className=\"form-row\">\n        <div className=\"col-2 pl-4\">\n          <div className=\"comment--avatar comment--avatar-main\" />\n        </div>\n        <div className=\"col-10 pl-2 pr-4\">\n          <textarea\n            className=\"form-control\"\n            rows=\"3\"\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            onKeyDown={handleKeyDown}\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nAddComment.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\n\nexport default AddComment;\n","export function randomHexColor() {\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\"<<\"] }] */\n  return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\n}\n","import React from 'react';\n\nconst NoCurrentItem = () => {\n  return <div className=\"col-12\">Choose item to see and add comments...</div>;\n};\n\nexport default NoCurrentItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Comment from './Comment';\nimport NoComments from './NoComments';\nimport AddComment from './AddComment';\nimport NoCurrentItem from './NoCurrentItem';\nimport { ADD_COMMENT } from '../actions/actionTypes';\n\nconst Comments = ({ currentItem, addComment }) => {\n  const isItemNullOrEmpty =\n    !currentItem || Object.keys(currentItem).length === 0;\n\n  return (\n    <div className=\"card shadow-sm bg-white rounded\">\n      <div className=\"card-body\">\n        <h2 className=\"card-title right-view--title\">\n          Comments {isItemNullOrEmpty ? null : `#${currentItem.id}`}\n        </h2>\n        {isItemNullOrEmpty ? (\n          <NoCurrentItem />\n        ) : (\n          <div className=\"card-text\">\n            <div className=\"row pt-2\">\n              {!currentItem?.comments?.length ? (\n                <NoComments />\n              ) : (\n                currentItem.comments?.map(comment => (\n                  <div key={comment.id} className=\"pt-5 col-12 p-0\">\n                    <Comment comment={comment} />\n                  </div>\n                ))\n              )}\n            </div>\n            {currentItem && Object.keys(currentItem).length > 0 ? (\n              <div className=\"row pt-5\">\n                <AddComment addComment={addComment} />\n              </div>\n            ) : null}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  currentItem: state.currentItem.selectedEntry\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: comment => dispatch({ type: ADD_COMMENT, payload: comment })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Comments);\n","import React from 'react';\nimport '../scss/RightView.scss';\nimport Items from '../components/Items';\nimport Comments from '../components/Comments';\n\nconst RightView = () => (\n  <div className=\"container-fluid p-4\">\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <Items />\n      </div>\n      <div className=\"col-6\">\n        <Comments />\n      </div>\n    </div>\n  </div>\n);\n\nexport default RightView;\n","import React from 'react';\nimport LeftView from './views/LeftView';\nimport RightView from './views/RightView';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid h-100\">\n      <div className=\"row h-100 fixed-top\">\n        <div className=\"col-3 hidden-md-down left-view\">\n          <LeftView />\n        </div>\n        <div className=\"col-9 col-sm-9 col-md-9 col-lg-9 col-xl-9\">\n          <RightView />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_ITEMS_TO_STORE,\n  ADD_ITEM,\n  REMOVE_ITEM\n} from '../actions/actionTypes';\nimport { pushToLocalStorage } from '../helpers/pushToLocalStorage';\nimport { filterFromLocalStorage } from '../helpers/filterFromLocalStorage';\n\nconst LOCAL_STORAGE_NAME = 'items';\n\nconst handlers = {\n  [ADD_ITEM]: (state, payload) => {\n    const localItems = pushToLocalStorage(LOCAL_STORAGE_NAME, payload);\n    return { ...state, entries: localItems };\n  },\n  [REMOVE_ITEM]: (state, payload) => {\n    const localItems = filterFromLocalStorage(LOCAL_STORAGE_NAME, payload);\n    return { ...state, entries: localItems };\n  },\n  [ADD_ITEMS_TO_STORE]: state => {\n    const items = localStorage.getItem(LOCAL_STORAGE_NAME);\n    return { ...state, entries: (items && JSON.parse(items)) || [] };\n  },\n  DEFAULT: state => state\n};\n\nconst initialState = {\n  entries: []\n};\n\nexport default function itemsReducer(state = initialState, action) {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action.payload);\n}\n","export function pushToLocalStorage(entry, item) {\n  const localItems = JSON.parse(localStorage.getItem(entry)) || [];\n  localItems.push(item);\n  localStorage.setItem(entry, JSON.stringify(localItems));\n  return localItems;\n}\n","export function filterFromLocalStorage(entry, id) {\n  let localItems = JSON.parse(localStorage.getItem(entry)) || [];\n  localItems = localItems.filter(item => item.id !== id);\n  localStorage.setItem(entry, JSON.stringify(localItems));\n  return localItems;\n}\n","import {\n  SELECT_ITEM,\n  LOAD_ITEM,\n  REMOVE_CURRENT_ITEM,\n  ADD_COMMENT\n} from '../actions/actionTypes';\n\nconst LOCAL_STORAGE_NAME = 'current-item';\n\nconst handlers = {\n  [SELECT_ITEM]: (state, payload) => {\n    localStorage.setItem(LOCAL_STORAGE_NAME, JSON.stringify(payload));\n    return { ...state, selectedEntry: payload };\n  },\n  [LOAD_ITEM]: state => {\n    const item = localStorage.getItem(LOCAL_STORAGE_NAME);\n    return { ...state, selectedEntry: (item && JSON.parse(item)) || {} };\n  },\n  [REMOVE_CURRENT_ITEM]: state => {\n    localStorage.setItem(LOCAL_STORAGE_NAME, null);\n    return { ...state, selectedEntry: null };\n  },\n  [ADD_COMMENT]: (state, payload) => {\n    const item = localStorage.getItem(LOCAL_STORAGE_NAME);\n    const normalItem = (item && JSON.parse(item)) || {};\n    // eslint-disable-next-line no-unused-expressions\n    normalItem?.comments?.push(payload);\n    localStorage.setItem(LOCAL_STORAGE_NAME, JSON.stringify(normalItem));\n    return { ...state, selectedEntry: normalItem };\n  },\n  DEFAULT: state => state\n};\n\nconst initialState = {\n  selectedEntry: {}\n};\n\nexport default function currentItemReducer(state = initialState, action) {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action.payload);\n}\n","import { combineReducers } from 'redux';\nimport itemsReducer from './itemsReducer';\nimport currentItemReducer from './currentItemReducer';\n\nexport default combineReducers({\n  items: itemsReducer,\n  currentItem: currentItemReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './scss/custom.scss';\nimport { Provider } from 'react-redux';\nimport { createStore, compose } from 'redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(rootReducer, composeEnhancers());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}